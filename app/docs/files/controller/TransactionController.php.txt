<?php
namespace ktc\a2\controller;

use ktc\a2\Exception\BankException;
use ktc\a2\model\TransactionModel;
use ktc\a2\model\TransactionCollectionModel;
use ktc\a2\view\View;
/**
 * Class TransactionController
 *
 * @package ktc/a2
 * @author  Andrew Gilman <a.gilman@massey.ac.nz>
 * @author  K. Dempsey
 * @author  T. Crompton
 * @author  C. Bishop
 */

class TransactionController extends Controller
{

    /**
     * Transaction Index action
     *
     * If the user is logged in:
     * - Creates and uses a TransactionCollectionModel object based on provided username and ID
     *   to create a TransactionModel generator
     * - Creates and renders a transactionIndex template with the TransactionModel generator attached
     * Otherwise redirects to HomeController::indexAction
     *
     * @uses $_SESSION['userName'] to determine if user is logged in and set $userName
     * @uses $_SESSION['userId'] to set $userId
     */
    public function indexAction()
    {
        session_start();
        if (isset($_SESSION['userName'])) {
            try {
                $userName = $_SESSION['userName'];
                $userId = $_SESSION['userId'];
                $collection = new TransactionCollectionModel($userName, $userId);
                $transactions = $collection->getTransactions();
                $view = new View('transactionIndex');
                echo $view->addData('transactions', $transactions)->render();
            } catch (BankException $ex) {
                $view = new View('exception');
                echo $view->addData("exception", $ex)->addData("back", "Home")->render();
            }
        } else {
            $this->redirect('Home');
        }
    }
}

